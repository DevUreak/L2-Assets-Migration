/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  L1StandardBridge,
  L1StandardBridgeInterface,
} from "../../../../../../../../sub/packages/tokamak/contracts/contracts/L1/messaging/L1StandardBridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20DepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20WithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHDepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHWithdrawalFinalized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20To",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETHTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeERC20Withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeETHWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TokenBridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506000806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050612279806100636000396000f3fe6080604052600436106100a05760003560e01c80638b4c40b0116100645780638b4c40b0146101e25780638f601f66146101ec57806391c49bf8146102295780639a2ac6d514610254578063a9f9e67514610270578063b1a1a882146102995761010e565b80631532ec34146101135780633cb747bf1461013c578063485cc9551461016757806358a997f614610190578063838b2520146101b95761010e565b3661010e576100ae336102b5565b156100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e5906113f0565b60405180910390fd5b61010c333362030d40604051806020016040528060008152506102c8565b005b600080fd5b34801561011f57600080fd5b5061013a60048036038101906101359190611513565b6103fc565b005b34801561014857600080fd5b506101516106e4565b60405161015e91906115aa565b60405180910390f35b34801561017357600080fd5b5061018e600480360381019061018991906115c5565b610708565b005b34801561019c57600080fd5b506101b760048036038101906101b29190611641565b61081c565b005b3480156101c557600080fd5b506101e060048036038101906101db91906116db565b61087d565b005b6101ea610896565b005b3480156101f857600080fd5b50610213600480360381019061020e91906115c5565b610898565b6040516102209190611799565b60405180910390f35b34801561023557600080fd5b5061023e6108bd565b60405161024b91906115aa565b60405180910390f35b61026e600480360381019061026991906117b4565b6108e3565b005b34801561027c57600080fd5b5061029760048036038101906102929190611828565b610939565b005b6102b360048036038101906102ae91906118d7565b610c73565b005b600080823b905060008111915050919050565b600063662a633a60e01b600073deaddeaddeaddeaddeaddeaddeaddeaddead000087873487604051602401610302969594939291906119e8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061038e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168483610d11565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2334856040516103ed929190611a50565b60405180910390a35050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610427610d8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611af2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104b3610d8c565b73ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105219190611b27565b73ffffffffffffffffffffffffffffffffffffffff1614610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90611bc6565b60405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff1685600067ffffffffffffffff8111156105ac576105ab611be6565b5b6040519080825280601f01601f1916602001820160405280156105de5781602001600182028036833780820191505090505b506040516105ec9190611c51565b60006040518083038185875af1925050503d8060008114610629576040519150601f19603f3d011682016040523d82523d6000602084013e61062e565b606091505b5050905080610672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066990611cda565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e6318787876040516106d393929190611d36565b60405180910390a350505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90611dda565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610825336102b5565b15610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c906113f0565b60405180910390fd5b6108758686333388888888610db5565b505050505050565b61088d8787338888888888610db5565b50505050505050565b565b6002602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61093333858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506102c8565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610964610d8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611af2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166109f0610d8c565b73ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190611b27565b73ffffffffffffffffffffffffffffffffffffffff1614610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab90611bc6565b60405180910390fd5b83600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3c9190611e29565b600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610be785858a73ffffffffffffffffffffffffffffffffffffffff1661102a9092919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b388888888604051610c619493929190611e5d565b60405180910390a45050505050505050565b610c7c336102b5565b15610cbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb3906113f0565b60405180910390fd5b610d0c33338585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506102c8565b505050565b610d19610d8c565b73ffffffffffffffffffffffffffffffffffffffff16633dbb202b8483856040518463ffffffff1660e01b8152600401610d5593929190611eac565b600060405180830381600087803b158015610d6f57600080fd5b505af1158015610d83573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610de28630868b73ffffffffffffffffffffffffffffffffffffffff166110b0909392919063ffffffff16565b600063662a633a60e01b89898989898888604051602401610e099796959493929190611eea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610e95600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168583610d11565b84600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1d9190611f54565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d0396898988886040516110179493929190611e5d565b60405180910390a4505050505050505050565b6110ab8363a9059cbb60e01b8484604051602401611049929190611f88565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611139565b505050565b611133846323b872dd60e01b8585856040516024016110d193929190611fb1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611139565b50505050565b600061119b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112009092919063ffffffff16565b90506000815111156111fb57808060200190518101906111bb9190612020565b6111fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f1906120bf565b60405180910390fd5b5b505050565b606061120f8484600085611218565b90509392505050565b60608247101561125d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125490612151565b60405180910390fd5b611266856102b5565b6112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c906121bd565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112ce9190611c51565b60006040518083038185875af1925050503d806000811461130b576040519150601f19603f3d011682016040523d82523d6000602084013e611310565b606091505b509150915061132082828661132c565b92505050949350505050565b6060831561133c5782905061138c565b60008351111561134f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113839190612221565b60405180910390fd5b9392505050565b600082825260208201905092915050565b7f4163636f756e74206e6f7420454f410000000000000000000000000000000000600082015250565b60006113da600f83611393565b91506113e5826113a4565b602082019050919050565b60006020820190508181036000830152611409816113cd565b9050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114458261141a565b9050919050565b6114558161143a565b811461146057600080fd5b50565b6000813590506114728161144c565b92915050565b6000819050919050565b61148b81611478565b811461149657600080fd5b50565b6000813590506114a881611482565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114d3576114d26114ae565b5b8235905067ffffffffffffffff8111156114f0576114ef6114b3565b5b60208301915083600182028301111561150c5761150b6114b8565b5b9250929050565b60008060008060006080868803121561152f5761152e611410565b5b600061153d88828901611463565b955050602061154e88828901611463565b945050604061155f88828901611499565b935050606086013567ffffffffffffffff8111156115805761157f611415565b5b61158c888289016114bd565b92509250509295509295909350565b6115a48161143a565b82525050565b60006020820190506115bf600083018461159b565b92915050565b600080604083850312156115dc576115db611410565b5b60006115ea85828601611463565b92505060206115fb85828601611463565b9150509250929050565b600063ffffffff82169050919050565b61161e81611605565b811461162957600080fd5b50565b60008135905061163b81611615565b92915050565b60008060008060008060a0878903121561165e5761165d611410565b5b600061166c89828a01611463565b965050602061167d89828a01611463565b955050604061168e89828a01611499565b945050606061169f89828a0161162c565b935050608087013567ffffffffffffffff8111156116c0576116bf611415565b5b6116cc89828a016114bd565b92509250509295509295509295565b600080600080600080600060c0888a0312156116fa576116f9611410565b5b60006117088a828b01611463565b97505060206117198a828b01611463565b965050604061172a8a828b01611463565b955050606061173b8a828b01611499565b945050608061174c8a828b0161162c565b93505060a088013567ffffffffffffffff81111561176d5761176c611415565b5b6117798a828b016114bd565b925092505092959891949750929550565b61179381611478565b82525050565b60006020820190506117ae600083018461178a565b92915050565b600080600080606085870312156117ce576117cd611410565b5b60006117dc87828801611463565b94505060206117ed8782880161162c565b935050604085013567ffffffffffffffff81111561180e5761180d611415565b5b61181a878288016114bd565b925092505092959194509250565b600080600080600080600060c0888a03121561184757611846611410565b5b60006118558a828b01611463565b97505060206118668a828b01611463565b96505060406118778a828b01611463565b95505060606118888a828b01611463565b94505060806118998a828b01611499565b93505060a088013567ffffffffffffffff8111156118ba576118b9611415565b5b6118c68a828b016114bd565b925092505092959891949750929550565b6000806000604084860312156118f0576118ef611410565b5b60006118fe8682870161162c565b935050602084013567ffffffffffffffff81111561191f5761191e611415565b5b61192b868287016114bd565b92509250509250925092565b60006119428261141a565b9050919050565b61195281611937565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611992578082015181840152602081019050611977565b60008484015250505050565b6000601f19601f8301169050919050565b60006119ba82611958565b6119c48185611963565b93506119d4818560208601611974565b6119dd8161199e565b840191505092915050565b600060c0820190506119fd600083018961159b565b611a0a6020830188611949565b611a17604083018761159b565b611a24606083018661159b565b611a31608083018561178a565b81810360a0830152611a4381846119af565b9050979650505050505050565b6000604082019050611a65600083018561178a565b8181036020830152611a7781846119af565b90509392505050565b7f4f564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560008201527f6e61757468656e74696361746564000000000000000000000000000000000000602082015250565b6000611adc602e83611393565b9150611ae782611a80565b604082019050919050565b60006020820190508181036000830152611b0b81611acf565b9050919050565b600081519050611b218161144c565b92915050565b600060208284031215611b3d57611b3c611410565b5b6000611b4b84828501611b12565b91505092915050565b7f4f564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360008201527f732d646f6d61696e206d65737361676500000000000000000000000000000000602082015250565b6000611bb0603083611393565b9150611bbb82611b54565b604082019050919050565b60006020820190508181036000830152611bdf81611ba3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b6000611c2b82611958565b611c358185611c15565b9350611c45818560208601611974565b80840191505092915050565b6000611c5d8284611c20565b915081905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b6000611cc4603483611393565b9150611ccf82611c68565b604082019050919050565b60006020820190508181036000830152611cf381611cb7565b9050919050565b82818337600083830152505050565b6000611d158385611963565b9350611d22838584611cfa565b611d2b8361199e565b840190509392505050565b6000604082019050611d4b600083018661178a565b8181036020830152611d5e818486611d09565b9050949350505050565b7f436f6e74726163742068617320616c7265616479206265656e20696e6974696160008201527f6c697a65642e0000000000000000000000000000000000000000000000000000602082015250565b6000611dc4602683611393565b9150611dcf82611d68565b604082019050919050565b60006020820190508181036000830152611df381611db7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e3482611478565b9150611e3f83611478565b9250828203905081811115611e5757611e56611dfa565b5b92915050565b6000606082019050611e72600083018761159b565b611e7f602083018661178a565b8181036040830152611e92818486611d09565b905095945050505050565b611ea681611605565b82525050565b6000606082019050611ec1600083018661159b565b8181036020830152611ed381856119af565b9050611ee26040830184611e9d565b949350505050565b600060c082019050611eff600083018a61159b565b611f0c602083018961159b565b611f19604083018861159b565b611f26606083018761159b565b611f33608083018661178a565b81810360a0830152611f46818486611d09565b905098975050505050505050565b6000611f5f82611478565b9150611f6a83611478565b9250828201905080821115611f8257611f81611dfa565b5b92915050565b6000604082019050611f9d600083018561159b565b611faa602083018461178a565b9392505050565b6000606082019050611fc6600083018661159b565b611fd3602083018561159b565b611fe0604083018461178a565b949350505050565b60008115159050919050565b611ffd81611fe8565b811461200857600080fd5b50565b60008151905061201a81611ff4565b92915050565b60006020828403121561203657612035611410565b5b60006120448482850161200b565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006120a9602a83611393565b91506120b48261204d565b604082019050919050565b600060208201905081810360008301526120d88161209c565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061213b602683611393565b9150612146826120df565b604082019050919050565b6000602082019050818103600083015261216a8161212e565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006121a7601d83611393565b91506121b282612171565b602082019050919050565b600060208201905081810360008301526121d68161219a565b9050919050565b600081519050919050565b60006121f3826121dd565b6121fd8185611393565b935061220d818560208601611974565b6122168161199e565b840191505092915050565b6000602082019050818103600083015261223b81846121e8565b90509291505056fea2646970667358221220b19e2b08fb183a0ade0d48479838d82646e7f288a54079ba526942dc6b23109b64736f6c63430008140033";

type L1StandardBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1StandardBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1StandardBridge__factory extends ContractFactory {
  constructor(...args: L1StandardBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1StandardBridge> {
    return super.deploy(overrides || {}) as Promise<L1StandardBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1StandardBridge {
    return super.attach(address) as L1StandardBridge;
  }
  override connect(signer: Signer): L1StandardBridge__factory {
    return super.connect(signer) as L1StandardBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1StandardBridgeInterface {
    return new utils.Interface(_abi) as L1StandardBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1StandardBridge {
    return new Contract(address, _abi, signerOrProvider) as L1StandardBridge;
  }
}
