/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  L1ForceWithdraw,
  L1ForceWithdrawInterface,
} from "../../contracts/L1ForceWithdraw";

const _abi = [
  {
    inputs: [],
    name: "doActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_old",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_new",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "editMigration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "generateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "migrattionClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Type.ClaimParam[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "migrattionClaimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
        ],
        internalType: "struct Type.AssetsParam[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "registry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
        ],
        internalType: "struct Type.AssetsParam[]",
        name: "_params",
        type: "tuple[]",
      },
    ],
    name: "verifyRegistry",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
        ],
        internalType: "struct Type.AssetsParam",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506118a1806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635f3290291161005b5780635f329029146100fe5780639f03649d1461011a578063aaaf7c4514610136578063e41e6c93146101405761007d565b80631797194714610082578063472bfc92146100b257806357490b06146100ce575b600080fd5b61009c60048036038101906100979190610da1565b61015c565b6040516100a99190610e77565b60405180910390f35b6100cc60048036038101906100c79190610ef4565b610282565b005b6100e860048036038101906100e39190610f34565b610290565b6040516100f59190610f96565b60405180910390f35b61011860048036038101906101139190610fdd565b6102c6565b005b610134600480360381019061012f9190611086565b6103f0565b005b61013e610466565b005b61015a60048036038101906101559190610da1565b610512565b005b610164610cf5565b600061016e6106d4565b905060005b8484905081101561024857600073ffffffffffffffffffffffffffffffffffffffff168260000160008787858181106101af576101ae6110d3565b5b90506040020160200135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361023557848482818110610216576102156110d3565b5b90506040020180360381019061022c91906111e3565b9250505061027c565b80806102409061123f565b915050610173565b506040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000801b8152509150505b92915050565b61028c8282610705565b5050565b60008383836040516020016102a7939291906112f0565b6040516020818303038152906040528051906020012090509392505050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c9061138a565b60405180910390fd5b600061033f6106d4565b9050600081600001600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508181600001600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60005b828290508110156104615761044e838383818110610414576104136110d3565b5b905060400201600001602081019061042c91906113aa565b84848481811061043f5761043e6110d3565b5b90506040020160200135610705565b80806104599061123f565b9150506103f3565b505050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc9061138a565b60405180910390fd5b60006104df6106d4565b90508060010160009054906101000a900460ff16158160010160006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610581576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105789061138a565b60405180910390fd5b600061058b6106d4565b905060005b838390508110156106ce57600073ffffffffffffffffffffffffffffffffffffffff168260000160008686858181106105cc576105cb6110d3565b5b90506040020160200135815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106bb57838382818110610633576106326110d3565b5b905060400201600001602081019061064b91906113aa565b826000016000868685818110610664576106636110d3565b5b90506040020160200135815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80806106c69061123f565b915050610590565b50505050565b6000806040516020016106e69061142e565b6040516020818303038152906040528051906020012090508091505090565b600061070f6106d4565b9050600081600001600085338660405160200161072e939291906112f0565b60405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415806107dc5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1561081c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108139061148f565b60405180910390fd5b6000826000016000863387604051602001610839939291906112f0565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d05760003373ffffffffffffffffffffffffffffffffffffffff1684600067ffffffffffffffff81111561090457610903611118565b5b6040519080825280601f01601f1916602001820160405280156109365781602001600182028036833780820191505090505b506040516109449190611520565b60006040518083038185875af1925050503d8060008114610981576040519150601f19603f3d011682016040523d82523d6000602084013e610986565b606091505b50509050806109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c1906115a9565b60405180910390fd5b506109fc565b6109fb33848673ffffffffffffffffffffffffffffffffffffffff16610a029092919063ffffffff16565b5b50505050565b610a838363a9059cbb60e01b8484604051602401610a219291906115e7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a88565b505050565b6000610aea826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b4f9092919063ffffffff16565b9050600081511115610b4a5780806020019051810190610b0a9190611648565b610b49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b40906116e7565b60405180910390fd5b5b505050565b6060610b5e8484600085610b67565b90509392505050565b606082471015610bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba390611779565b60405180910390fd5b610bb585610c7b565b610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610beb906117e5565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610c1d9190611520565b60006040518083038185875af1925050503d8060008114610c5a576040519150601f19603f3d011682016040523d82523d6000602084013e610c5f565b606091505b5091509150610c6f828286610c8e565b92505050949350505050565b600080823b905060008111915050919050565b60608315610c9e57829050610cee565b600083511115610cb15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce59190611849565b60405180910390fd5b9392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610d6157610d60610d3c565b5b8235905067ffffffffffffffff811115610d7e57610d7d610d41565b5b602083019150836040820283011115610d9a57610d99610d46565b5b9250929050565b60008060208385031215610db857610db7610d32565b5b600083013567ffffffffffffffff811115610dd657610dd5610d37565b5b610de285828601610d4b565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1982610dee565b9050919050565b610e2981610e0e565b82525050565b6000819050919050565b610e4281610e2f565b82525050565b604082016000820151610e5e6000850182610e20565b506020820151610e716020850182610e39565b50505050565b6000604082019050610e8c6000830184610e48565b92915050565b610e9b81610e0e565b8114610ea657600080fd5b50565b600081359050610eb881610e92565b92915050565b6000819050919050565b610ed181610ebe565b8114610edc57600080fd5b50565b600081359050610eee81610ec8565b92915050565b60008060408385031215610f0b57610f0a610d32565b5b6000610f1985828601610ea9565b9250506020610f2a85828601610edf565b9150509250929050565b600080600060608486031215610f4d57610f4c610d32565b5b6000610f5b86828701610ea9565b9350506020610f6c86828701610ea9565b9250506040610f7d86828701610edf565b9150509250925092565b610f9081610e2f565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b610fba81610e2f565b8114610fc557600080fd5b50565b600081359050610fd781610fb1565b92915050565b600080600060608486031215610ff657610ff5610d32565b5b600061100486828701610fc8565b935050602061101586828701610fc8565b925050604061102686828701610ea9565b9150509250925092565b60008083601f84011261104657611045610d3c565b5b8235905067ffffffffffffffff81111561106357611062610d41565b5b60208301915083604082028301111561107f5761107e610d46565b5b9250929050565b6000806020838503121561109d5761109c610d32565b5b600083013567ffffffffffffffff8111156110bb576110ba610d37565b5b6110c785828601611030565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61115082611107565b810181811067ffffffffffffffff8211171561116f5761116e611118565b5b80604052505050565b6000611182610d28565b905061118e8282611147565b919050565b6000604082840312156111a9576111a8611102565b5b6111b36040611178565b905060006111c384828501610ea9565b60008301525060206111d784828501610fc8565b60208301525092915050565b6000604082840312156111f9576111f8610d32565b5b600061120784828501611193565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124a82610ebe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361127c5761127b611210565b5b600182019050919050565b60008160601b9050919050565b600061129f82611287565b9050919050565b60006112b182611294565b9050919050565b6112c96112c482610e0e565b6112a6565b82525050565b6000819050919050565b6112ea6112e582610ebe565b6112cf565b82525050565b60006112fc82866112b8565b60148201915061130c82856112b8565b60148201915061131c82846112d9565b602082019150819050949350505050565b600082825260208201905092915050565b7f4f6e6c7920436c6f736572000000000000000000000000000000000000000000600082015250565b6000611374600b8361132d565b915061137f8261133e565b602082019050919050565b600060208201905081810360008301526113a381611367565b9050919050565b6000602082840312156113c0576113bf610d32565b5b60006113ce84828501610ea9565b91505092915050565b600081905092915050565b7f4c31427269646765466f72636557697468726177000000000000000000000000600082015250565b60006114186014836113d7565b9150611423826113e2565b601482019050919050565b60006114398261140b565b9150819050919050565b7f6e6f7420636c61696d6572000000000000000000000000000000000000000000600082015250565b6000611479600b8361132d565b915061148482611443565b602082019050919050565b600060208201905081810360008301526114a88161146c565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156114e35780820151818401526020810190506114c8565b60008484015250505050565b60006114fa826114af565b61150481856114ba565b93506115148185602086016114c5565b80840191505092915050565b600061152c82846114ef565b915081905092915050565b7f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60008201527f20455448207472616e73666572206661696c6564000000000000000000000000602082015250565b600061159360348361132d565b915061159e82611537565b604082019050919050565b600060208201905081810360008301526115c281611586565b9050919050565b6115d281610e0e565b82525050565b6115e181610ebe565b82525050565b60006040820190506115fc60008301856115c9565b61160960208301846115d8565b9392505050565b60008115159050919050565b61162581611610565b811461163057600080fd5b50565b6000815190506116428161161c565b92915050565b60006020828403121561165e5761165d610d32565b5b600061166c84828501611633565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006116d1602a8361132d565b91506116dc82611675565b604082019050919050565b60006020820190508181036000830152611700816116c4565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061176360268361132d565b915061176e82611707565b604082019050919050565b6000602082019050818103600083015261179281611756565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006117cf601d8361132d565b91506117da82611799565b602082019050919050565b600060208201905081810360008301526117fe816117c2565b9050919050565b600081519050919050565b600061181b82611805565b611825818561132d565b93506118358185602086016114c5565b61183e81611107565b840191505092915050565b600060208201905081810360008301526118638184611810565b90509291505056fea264697066735822122042b76803c6dd7ff56cea1a51987716841f1ad941262f5e7e8cb1463b0d5ab2a264736f6c63430008140033";

type L1ForceWithdrawConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ForceWithdrawConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1ForceWithdraw__factory extends ContractFactory {
  constructor(...args: L1ForceWithdrawConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1ForceWithdraw> {
    return super.deploy(overrides || {}) as Promise<L1ForceWithdraw>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1ForceWithdraw {
    return super.attach(address) as L1ForceWithdraw;
  }
  override connect(signer: Signer): L1ForceWithdraw__factory {
    return super.connect(signer) as L1ForceWithdraw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ForceWithdrawInterface {
    return new utils.Interface(_abi) as L1ForceWithdrawInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1ForceWithdraw {
    return new Contract(address, _abi, signerOrProvider) as L1ForceWithdraw;
  }
}
