/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UpgradeL1Bridge,
  UpgradeL1BridgeInterface,
} from "../../contracts/UpgradeL1Bridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20DepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20WithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHDepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHWithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "ForceWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20To",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETHTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeERC20Withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeETHWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "forceActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_call",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "forceWithdrawClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "call",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "hashed",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct UpgradeL1Bridge.ForceClaimParam[]",
        name: "params",
        type: "tuple[]",
      },
    ],
    name: "forceWithdrawClaimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "gb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TokenBridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "registry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "st",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052341561000f57600080fd5b600080546001600160a01b03191690556003805460ff191660011790556121da8061003c608039806080f3fe6040608081526004361061043c576000803560e01c6302fb0c5e81146100df57631532ec34811461012557631a4a4561811461014f5763323205e6811461016f57633cb747bf81146101d15763485cc9558114610209576358a997f6811461022d576376aa124881146102595763838b2520811461027657638b4c40b081146102a457638ddae35781146102ad57638f601f6681146102e4576391c49bf8811461036757639a2ac6d581146103a05763a9f9e67581146103be5763b1a1a88281146103e05763d09598bc81146103fc5763dd2a6ae8811461041957610439565b34156100e9578182fd5b6100f236610451565b60035460ff1615156080527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060a0016080f35b341561012f578182fd5b610138366104d1565b610145818385878961153b565b5050505050818351f35b3415610159578182fd5b61016a6101653661054e565b611911565b818351f35b3415610179578182fd5b6101ad61018536610574565b60009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b835173ffffffffffffffffffffffffffffffffffffffff82168152602081f35b0381f35b34156101db578182fd5b6101e436610451565b8154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b3415610213578182fd5b61021c36610590565b610226818361091b565b5050818351f35b3415610237578182fd5b610240366105c7565b61024e81838587898b610ed2565b505050505050818351f35b3415610263578182fd5b61026c3661064e565b6102268183611b75565b3415610280578182fd5b61028936610674565b61029881838587898b8d610f45565b50505050505050818351f35b61016a36610451565b34156102b7578182fd5b6102d86102c336610574565b60009081526005602052604090205460ff1690565b83518115158152602081f35b34156102ee578182fd5b6102f736610590565b610352816103268473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b73ffffffffffffffffffffffffffffffffffffffff821660005280602052505060006040600020905090565b549150508351806101cd838390815260200190565b3415610371578182fd5b61037a36610451565b600154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b6103a93661070f565b6103b581838587610cf6565b50505050818351f35b34156103c8578182fd5b6103d13661077e565b61029881838587898b8d6116eb565b6103e9366107f0565b6103f4818385610c36565b505050818351f35b3415610406578182fd5b61040f3661084e565b6102268183611a32565b3415610423578182fd5b61042c366108c3565b6101458183858789611b15565b50505b503661044c5761044a610a2e565b005b600080fd5b60006003198201121561046357600080fd5b50565b73ffffffffffffffffffffffffffffffffffffffff8116811461046357600080fd5b60008083601f84011261049a57600080fd5b50813567ffffffffffffffff8111156104b257600080fd5b6020830191508360208285010111156104ca57600080fd5b9250929050565b60008060008060006080600319870112156104eb57600080fd5b6004356104f781610466565b945060243561050581610466565b9350604435925060643567ffffffffffffffff81111561052457600080fd5b6105318782600401610488565b96989597509395939492505050565b801515811461046357600080fd5b600060206003198301121561056257600080fd5b60043561056e81610540565b92915050565b600060206003198301121561058857600080fd5b505060043590565b6000806040600319840112156105a557600080fd5b6004356105b181610466565b91506024356105bf81610466565b919391925050565b60008060008060008060a0600319880112156105e257600080fd5b6004356105ee81610466565b95506024356105fc81610466565b9450604435935060643563ffffffff8116811461061857600080fd5b925060843567ffffffffffffffff81111561063257600080fd5b61063f8882600401610488565b97999698509496939592505050565b60008060406003198401121561066357600080fd5b60043591506024356105bf81610540565b600080600080600080600060c06003198901121561069157600080fd5b60043561069d81610466565b96506024356106ab81610466565b95506044356106b981610466565b9450606435935060843563ffffffff811681146106d557600080fd5b925060a43567ffffffffffffffff8111156106ef57600080fd5b6106fc8982600401610488565b989a979950959794969395949392505050565b60008060008060606003198601121561072757600080fd5b60043561073381610466565b935060243563ffffffff8116811461074a57600080fd5b925060443567ffffffffffffffff81111561076457600080fd5b6107718682600401610488565b9597949650949392505050565b600080600080600080600060c06003198901121561079b57600080fd5b6004356107a781610466565b96506024356107b581610466565b95506044356107c381610466565b94506064356107d181610466565b9350608435925060a43567ffffffffffffffff8111156106ef57600080fd5b600080600060406003198501121561080757600080fd5b60043563ffffffff8116811461081c57600080fd5b925060243567ffffffffffffffff81111561083657600080fd5b6108438582600401610488565b949690955092505050565b60008060206003198401121561086357600080fd5b60043567ffffffffffffffff8082111561087c57600080fd5b84602383011261088b57600080fd5b81600401358181111561089d57600080fd5b85602460a0830285010111156108b257600080fd5b602483019450809350505050915091565b600080600080600060a0600319870112156108dd57600080fd5b6004356108e981610466565b945060243593506044356108fc81610466565b925060643561090a81610466565b949693955091939260843592509050565b60005473ffffffffffffffffffffffffffffffffffffffff808216156109a65760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163742068617320616c7265616479206265656e20696e6974696160448201527f6c697a65642e00000000000000000000000000000000000000000000000000006064820152608481fd5b7fffffffffffffffffffffffff0000000000000000000000000000000000000000818416818416176000558185168160015416176001555050505050565b806104635760405162461bcd60e51b815260206004820152600f60248201527f4163636f756e74206e6f7420454f4100000000000000000000000000000000006044820152606481fd5b610a39333b156109e4565b604051610a4581610b7b565b600081526040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead000060448201523360648201523360848201523460a482015260c060c482015280610aba60e4830184610d62565b03601f1981018252610acc8183610be1565b50610af581610af060015473ffffffffffffffffffffffffffffffffffffffff1690565b61203d565b5060405133337f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2383610b28863487610daf565b0384a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811115610b7657610b76610b2f565b604052565b6020810181811067ffffffffffffffff82111715610b9b57610b9b610b2f565b60405250565b60a0810181811067ffffffffffffffff82111715610b9b57610b9b610b2f565b6040810181811067ffffffffffffffff82111715610b9b57610b9b610b2f565b601f19601f830116810181811067ffffffffffffffff82111715610c0757610c07610b2f565b6040525050565b600067ffffffffffffffff821115610c2857610c28610b2f565b50601f01601f191660200190565b610c41333b156109e4565b60ff6003541615610c955760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b0381fd5b610cab610ca3368585610cb0565b823333610dd0565b505050565b6000610cbb83610c0e565b604051610cc88282610be1565b809250848152858585011115610cdd57600080fd5b8484602083013760006020868301015250509392505050565b60ff6003541615610d465760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b610d5c610d54368686610cb0565b838333610dd0565b50505050565b6000815180845260005b81811015610d8857602081850181015186830182015201610d6c565b81811115610d9a576000602083870101525b50601f01601f19169290920160200192915050565b818152604060208201526000610dc86040830185610d62565b949350505050565b6040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead0000604482015273ffffffffffffffffffffffffffffffffffffffff8281166064830152831660848201523460a482015260c060c482015280610e5960e4820187610d62565b03601f1981018252610e6b8183610be1565b50610e958185610e9060015473ffffffffffffffffffffffffffffffffffffffff1690565b6120e8565b5060405182827f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2383610ec8893487610daf565b0384a35050505050565b610edd333b156109e4565b60ff6003541615610f2d5760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b610f3d86868686333388886110bd565b505050505050565b60ff6003541615610f955760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b610fa587878787873388886110bd565b50505050505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff80841683528085166020840152808616604084015280871660608401525086608083015260c060a083015261102960c083018a8a610fae565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561107857611078611036565b500190565b73ffffffffffffffffffffffffffffffffffffffff821681528260208201526060604082015260006110b3606083018787610fae565b9695505050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff80851660248301523060448301528660648301526064825261111c82610ba1565b6111288282851661124b565b50506040517f662a633a000000000000000000000000000000000000000000000000000000006020820152806111678a8a898989898960248a01610fd9565b03601f19810182526111798183610be1565b5061119e8188610e9060015473ffffffffffffffffffffffffffffffffffffffff1690565b506111d8856111d2846103268573ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b54611065565b611207836103268473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b556040518383837f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d03968461123d8e8e8d8d8a61107d565b0385a4505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff811660405161126e81610bc1565b60208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648183015260008086518388016000875af16112b8836112b1611358565b8387611395565b935050825191508115806112e75781848486010312156112d757600080fd5b818401516112e481610540565b90505b80610f3d57604051935062461bcd60e51b8452816004850152602a60248501527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448501527f6f742073756363656564000000000000000000000000000000000000000000006064850152608484fd5b60003d801561138d573d61136b81610c0e565b6040516113788282610be1565b8281528094503d6000602083013e5050505090565b606091505090565b60608280156113f85784516113ef57823b6113ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606481fd5b84915050610dc8565b84511580159061140a57855186602001fd5b60405162461bcd60e51b81526020600482015280610c91602483018a610d62565b806104635760405162461bcd60e51b815260206004820152602e60248201527f4f564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560448201527f6e61757468656e746963617465640000000000000000000000000000000000006064820152608481fd5b6000602082840312156114ad57600080fd5b81516114b881610466565b9392505050565b6040513d6000823e3d81fd5b806104635760405162461bcd60e51b815260206004820152603060248201527f4f564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360448201527f732d646f6d61696e206d657373616765000000000000000000000000000000006064820152608481fd5b73ffffffffffffffffffffffffffffffffffffffff806001541660008281541661156681331461142b565b803b611570578182fd5b604080517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483865afa9250826115af576115af6114bf565b8383156115cf576115c03d83610be1565b6115cc3d83018361149b565b90505b6115dc86888316146114cb565b5050805194506115eb85610b7b565b8285526020850193508236853782838651868b8b5af1945061160b611358565b508461167d578051935062461bcd60e51b845260206004850152603460248501527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448501527f20455448207472616e73666572206661696c65640000000000000000000000006064850152608484fd5b8051945087855280602086015286867f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e631876116bb858a018f8f610fae565b0388a350505050505050505050565b60006040516116d881610b7b565b6000815280915060003660208301375090565b73ffffffffffffffffffffffffffffffffffffffff806001541660008281541661171681331461142b565b803b611720578182fd5b6040517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483855afa91508161175e5761175e6114bf565b82821561177e5761176f3d83610be1565b61177b3d83018361149b565b90505b61178b85878316146114cb565b50505060ff60035416156117e05760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e6461726442726964676500000000000000000060448201529150606482fd5b91831680835260026020908152604080852073ffffffffffffffffffffffffffffffffffffffff88166000908152925290209092905491508782101561182857611828611036565b8281526002602090815260409182902073ffffffffffffffffffffffffffffffffffffffff871660009081529152209087900390556118688686836118ab565b506040518383837f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b38461189e8d8d8d8d8a61107d565b0385a45050505050505050565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff831660248201526044808201859052815260646119068183610be1565b50610d5c818361124b565b7370997970c51812dc3a010c7d01b50e0d17dc79c833146119715760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c7920436c6f7365720000000000000000000000000000000000000000006044820152606481fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006003541660ff8215151681176003555050565b60008284106119dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60a08402820190509392505050565b6000813561056e81610466565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a2b57611a2b611036565b5060010190565b333b15611a7e5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f410000000000000000000000000000000000000000000000006044820152606481fd5b6000806001805b8115610f3d5780611a9c57858310611a9c57610f3d565b5082611ab1611aac8488886119a5565b6119ec565b6020611abe8589896119a5565b0135611ad66040611ad0878b8b6119a5565b016119ec565b611ae66060611ad0888c8c6119a5565b611b016080611af6898d8d6119a5565b013582848688611c30565b50505050611b0e836119f9565b9250611a85565b333b15611b615760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f410000000000000000000000000000000000000000000000006044820152606481fd5b611b6e8585858585611c30565b5050505050565b7370997970c51812dc3a010c7d01b50e0d17dc79c83314611bd55760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c7920436c6f7365720000000000000000000000000000000000000000006044820152606481fd5b80600052600560205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff841515168117825550505050565b600060208284031215611c2957600080fd5b5051919050565b611c56611c52611c4b84600090815260056020526040902090565b5460ff1690565b1590565b15611cc65760405162461bcd60e51b815260206004820152602a60248201527f466f7263655769746864726177436c61696d3a206e6f7420757365205f63616c60448201527f6c207661726961626c65000000000000000000000000000000000000000000006064820152608481fd5b604080517f5f00000000000000000000000000000000000000000000000000000000000000602080830191825260218084018790528352906041601f19611d0d8286610be1565b855194518320949150611d1f82610b5e565b85519250838301915084825260048352611d3883610bc1565b6000808451848a5afa9450611d4b611358565b941594925084611d5b5782511594505b8415611da757855162461bcd60e51b815260206004820152601f60248201527f466f7263655769746864726177436c61696d3a2063616c6c206661696c65640060448201529150606482fd5b855160608a811b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116878401908152918d901b166014820152602881018d905290955091508460488301038181018652611e038187610be1565b505083518120935050611e1d828251830101838301611c17565b928314929050821580611e775773ffffffffffffffffffffffffffffffffffffffff611e71611e5784600090815260046020526040902090565b5473ffffffffffffffffffffffffffffffffffffffff1690565b16151590505b8015611ecb578451935062461bcd60e51b845283611ec7600486016020808252818101527f466f7263655769746864726177436c61696d3a20696e76616c69642068617368604082015260600190565b0384fd5b50611f2788611ee583600090815260046020526040902090565b73ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b73ffffffffffffffffffffffffffffffffffffffff8716925082158015611fdc57611f506116ca565b60008082518684018e335af19050611f66611358565b5080611fd657855162461bcd60e51b815260206004820152602760248201527f466f7263655769746864726177436c61696d3a20455448207472616e7366657260448201527f206661696c6564000000000000000000000000000000000000000000000000006064820152608481fd5b50611fe7565b611fe78a33866118ab565b50925173ffffffffffffffffffffffffffffffffffffffff87168152602081018990529233817f9570d360679f48443322a65d5cabe1ef5a81d7624db792a20c7a6f3eb5de36f5604087a3505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff600081815416803b612062578182fd5b6040517f3dbb202b0000000000000000000000000000000000000000000000000000000081528385166004820152606060248201526120a46064820187610d62565b935062030d40604482015282818286038386865af19350836120c8576120c86114bf565b8315610f3d576120d83d82610be1565b82813d8301031215610f3d578283fd5b73ffffffffffffffffffffffffffffffffffffffff600081815416803b61210d578182fd5b6040517f3dbb202b00000000000000000000000000000000000000000000000000000000815283851660048201526060602482015261214f6064820188610d62565b935063ffffffff8616604482015282818286038386865af1935083612176576121766114bf565b8315610fa5576121863d82610be1565b82813d8301031215610fa5578283fdfea36469706673582212204c5d18e4ea6c1bc582c8cd00d2384a594174ad596ae0b2b7fc80937794b5d85c6c6578706572696d656e74616cf564736f6c63430008090041";

type UpgradeL1BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeL1BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeL1Bridge__factory extends ContractFactory {
  constructor(...args: UpgradeL1BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradeL1Bridge> {
    return super.deploy(overrides || {}) as Promise<UpgradeL1Bridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UpgradeL1Bridge {
    return super.attach(address) as UpgradeL1Bridge;
  }
  override connect(signer: Signer): UpgradeL1Bridge__factory {
    return super.connect(signer) as UpgradeL1Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeL1BridgeInterface {
    return new utils.Interface(_abi) as UpgradeL1BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeL1Bridge {
    return new Contract(address, _abi, signerOrProvider) as UpgradeL1Bridge;
  }
}
